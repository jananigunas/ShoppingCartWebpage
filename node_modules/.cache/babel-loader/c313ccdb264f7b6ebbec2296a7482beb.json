{"ast":null,"code":"import Item1 from '../../images/item1.jpg';\nimport Item2 from '../../images/item2.jpg';\nimport Item3 from '../../images/item3.jpg';\nimport Item4 from '../../images/item4.jpg';\nimport Item5 from '../../images/item5.jpg';\nimport Item6 from '../../images/item6.jpg';\nconst initState = {\n  isLoading: true,\n  items: [],\n  itemsInCart: [],\n  cartValue: 0,\n  error: null\n};\n\nconst cartReducer = (state = initState, action) => {\n  switch (action.type) {\n    case 'RESPONSE_FROM_API':\n      {\n        return { ...state,\n          items: action.data,\n          isLoading: false\n        };\n      }\n\n    case 'FAILED_TO_FETCH_API_RESPONSE':\n      {\n        return { ...state,\n          error: action.error,\n          isLoading: false\n        };\n      }\n\n    default:\n      return state;\n  }\n  /*if(action.type === 'ADD_PRODUCT_TO_CART'){\n  console.log(\"state.items\", state.items);\n      const itemAdded = state.items.find(item => item.partId === action.id);\n      const itemExistsInCart = state.itemsInCart.find(item => item.partId === action.id);\n      if(itemExistsInCart){\n          itemAdded.quantity += 1;\n          return {\n              ...state,\n              cartValue: state.cartValue + itemAdded.priceValue\n          }\n      }\n      else{\n          itemAdded.quantity = 1;\n          const newCartValue = state.cartValue + itemAdded.priceValue;\n          return {\n              ...state,\n              itemsInCart: [...state.itemsInCart, itemAdded],\n              cartValue: newCartValue\n          }\n      }\n  }*/\n\n};\n\nexport default cartReducer;","map":{"version":3,"sources":["/Users/jg066499/Documents/Project/Shopping-Cart/src/Reducers/cartReducer.js"],"names":["Item1","Item2","Item3","Item4","Item5","Item6","initState","isLoading","items","itemsInCart","cartValue","error","cartReducer","state","action","type","data"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,wBAAlB;AACA,OAAOC,KAAP,MAAkB,wBAAlB;AACA,OAAOC,KAAP,MAAkB,wBAAlB;AACA,OAAOC,KAAP,MAAkB,wBAAlB;AACA,OAAOC,KAAP,MAAkB,wBAAlB;AACA,OAAOC,KAAP,MAAkB,wBAAlB;AAEA,MAAMC,SAAS,GAAG;AACdC,EAAAA,SAAS,EAAE,IADG;AAEdC,EAAAA,KAAK,EAAE,EAFO;AAGdC,EAAAA,WAAW,EAAC,EAHE;AAIdC,EAAAA,SAAS,EAAE,CAJG;AAKdC,EAAAA,KAAK,EAAE;AALO,CAAlB;;AAOA,MAAMC,WAAW,GAAE,CAACC,KAAK,GAAGP,SAAT,EAAoBQ,MAApB,KAA6B;AAC5C,UAAOA,MAAM,CAACC,IAAd;AACI,SAAK,mBAAL;AAA0B;AACtB,eAAO,EACH,GAAGF,KADA;AAEHL,UAAAA,KAAK,EAAEM,MAAM,CAACE,IAFX;AAGHT,UAAAA,SAAS,EAAE;AAHR,SAAP;AAKH;;AACD,SAAK,8BAAL;AAAqC;AACjC,eAAO,EACH,GAAGM,KADA;AAEHF,UAAAA,KAAK,EAAEG,MAAM,CAACH,KAFX;AAGHJ,UAAAA,SAAS,EAAE;AAHR,SAAP;AAKH;;AACD;AACI,aAAOM,KAAP;AAhBR;AAmBA;;;;;;;;;;;;;;;;;;;;;;AAqBH,CAzCD;;AA2CA,eAAeD,WAAf","sourcesContent":["import Item1 from '../../images/item1.jpg'\nimport Item2 from '../../images/item2.jpg'\nimport Item3 from '../../images/item3.jpg'\nimport Item4 from '../../images/item4.jpg'\nimport Item5 from '../../images/item5.jpg'\nimport Item6 from '../../images/item6.jpg'\n\nconst initState = {\n    isLoading: true,\n    items: [],\n    itemsInCart:[],\n    cartValue: 0,\n    error: null,\n}\nconst cartReducer= (state = initState, action)=>{\n    switch(action.type){\n        case 'RESPONSE_FROM_API': {\n            return {\n                ...state,\n                items: action.data,\n                isLoading: false\n            }\n        }\n        case 'FAILED_TO_FETCH_API_RESPONSE': {\n            return {\n                ...state,\n                error: action.error,\n                isLoading: false\n            }\n        }\n        default:\n            return state;\n    }\n\n    /*if(action.type === 'ADD_PRODUCT_TO_CART'){\n    console.log(\"state.items\", state.items);\n        const itemAdded = state.items.find(item => item.partId === action.id);\n        const itemExistsInCart = state.itemsInCart.find(item => item.partId === action.id);\n        if(itemExistsInCart){\n            itemAdded.quantity += 1;\n            return {\n                ...state,\n                cartValue: state.cartValue + itemAdded.priceValue\n            }\n        }\n        else{\n            itemAdded.quantity = 1;\n            const newCartValue = state.cartValue + itemAdded.priceValue;\n            return {\n                ...state,\n                itemsInCart: [...state.itemsInCart, itemAdded],\n                cartValue: newCartValue\n            }\n        }\n    }*/  \n}\n\nexport default cartReducer;"]},"metadata":{},"sourceType":"module"}