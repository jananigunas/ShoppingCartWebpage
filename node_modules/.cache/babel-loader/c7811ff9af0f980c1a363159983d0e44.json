{"ast":null,"code":"import { ACTIONS } from '../Actions/cartActions';\nconst initState = {\n  isLoading: true,\n  items: [],\n  itemsInCart: [],\n  cartValue: 0,\n  error: null\n};\n\nconst cartReducer = (state = initState, action) => {\n  switch (action.type) {\n    case ACTIONS.RESPONSE_FROM_API:\n      return { ...state,\n        items: action.data,\n        isLoading: false\n      };\n\n    case ACTIONS.FAILED_TO_FETCH_API_RESPONSE:\n      return { ...state,\n        error: action.error,\n        isLoading: false\n      };\n\n    default:\n      return state;\n  }\n  /*if(action.type === 'ADD_PRODUCT_TO_CART'){\n  console.log(\"state.items\", state.items);\n      const itemAdded = state.items.find(item => item.partId === action.id);\n      const itemExistsInCart = state.itemsInCart.find(item => item.partId === action.id);\n      if(itemExistsInCart){\n          itemAdded.quantity += 1;\n          return {\n              ...state,\n              cartValue: state.cartValue + itemAdded.priceValue\n          }\n      }\n      else{\n          itemAdded.quantity = 1;\n          const newCartValue = state.cartValue + itemAdded.priceValue;\n          return {\n              ...state,\n              itemsInCart: [...state.itemsInCart, itemAdded],\n              cartValue: newCartValue\n          }\n      }\n  }*/\n\n};\n\nexport default cartReducer;","map":{"version":3,"sources":["/Users/jg066499/Documents/Project/Shopping-Cart/src/Reducers/cartReducer.js"],"names":["ACTIONS","initState","isLoading","items","itemsInCart","cartValue","error","cartReducer","state","action","type","RESPONSE_FROM_API","data","FAILED_TO_FETCH_API_RESPONSE"],"mappings":"AAAA,SAASA,OAAT,QAAwB,wBAAxB;AAEA,MAAMC,SAAS,GAAG;AACdC,EAAAA,SAAS,EAAE,IADG;AAEdC,EAAAA,KAAK,EAAE,EAFO;AAGdC,EAAAA,WAAW,EAAC,EAHE;AAIdC,EAAAA,SAAS,EAAE,CAJG;AAKdC,EAAAA,KAAK,EAAE;AALO,CAAlB;;AAOA,MAAMC,WAAW,GAAE,CAACC,KAAK,GAAGP,SAAT,EAAoBQ,MAApB,KAA6B;AAC5C,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKV,OAAO,CAACW,iBAAb;AACI,aAAO,EACH,GAAGH,KADA;AAEHL,QAAAA,KAAK,EAAEM,MAAM,CAACG,IAFX;AAGHV,QAAAA,SAAS,EAAE;AAHR,OAAP;;AAKJ,SAAKF,OAAO,CAACa,4BAAb;AACI,aAAO,EACH,GAAGL,KADA;AAEHF,QAAAA,KAAK,EAAEG,MAAM,CAACH,KAFX;AAGHJ,QAAAA,SAAS,EAAE;AAHR,OAAP;;AAKJ;AACI,aAAOM,KAAP;AAdR;AAiBA;;;;;;;;;;;;;;;;;;;;;;AAqBH,CAvCD;;AAyCA,eAAeD,WAAf","sourcesContent":["import { ACTIONS } from '../Actions/cartActions';\n\nconst initState = {\n    isLoading: true,\n    items: [],\n    itemsInCart:[],\n    cartValue: 0,\n    error: null,\n}\nconst cartReducer= (state = initState, action)=>{\n    switch(action.type){\n        case ACTIONS.RESPONSE_FROM_API:\n            return {\n                ...state,\n                items: action.data,\n                isLoading: false\n            }\n        case ACTIONS.FAILED_TO_FETCH_API_RESPONSE:\n            return {\n                ...state,\n                error: action.error,\n                isLoading: false\n            }\n        default:\n            return state;\n    }\n\n    /*if(action.type === 'ADD_PRODUCT_TO_CART'){\n    console.log(\"state.items\", state.items);\n        const itemAdded = state.items.find(item => item.partId === action.id);\n        const itemExistsInCart = state.itemsInCart.find(item => item.partId === action.id);\n        if(itemExistsInCart){\n            itemAdded.quantity += 1;\n            return {\n                ...state,\n                cartValue: state.cartValue + itemAdded.priceValue\n            }\n        }\n        else{\n            itemAdded.quantity = 1;\n            const newCartValue = state.cartValue + itemAdded.priceValue;\n            return {\n                ...state,\n                itemsInCart: [...state.itemsInCart, itemAdded],\n                cartValue: newCartValue\n            }\n        }\n    }*/  \n}\n\nexport default cartReducer;"]},"metadata":{},"sourceType":"module"}