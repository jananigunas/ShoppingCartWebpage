{"ast":null,"code":"const initState = {\n  isLoading: true,\n  items: [],\n  itemsInCart: [],\n  cartValue: 0,\n  error: null\n};\n\nconst cartReducer = (state = initState, action) => {\n  switch (action.type) {\n    case 'FETCH_FROM_API':\n      {\n        fetch('https://shopping-cart-demo-api.herokuapp.com/products').then(resp => resp.json()).then(data => {\n          console.log(\"///////////\", data);\n        }).catch(error => {\n          return { ...state,\n            error: error,\n            isLoading: false\n          };\n        });\n        break;\n      }\n\n    default:\n      return state;\n  }\n  /*if(action.type === 'ADD_PRODUCT_TO_CART'){\n  console.log(\"state.items\", state.items);\n      const itemAdded = state.items.find(item => item.partId === action.id);\n      const itemExistsInCart = state.itemsInCart.find(item => item.partId === action.id);\n      if(itemExistsInCart){\n          itemAdded.quantity += 1;\n          return {\n              ...state,\n              cartValue: state.cartValue + itemAdded.priceValue\n          }\n      }\n      else{\n          itemAdded.quantity = 1;\n          const newCartValue = state.cartValue + itemAdded.priceValue;\n          return {\n              ...state,\n              itemsInCart: [...state.itemsInCart, itemAdded],\n              cartValue: newCartValue\n          }\n      }\n  }*/\n\n};\n\nexport default cartReducer;","map":{"version":3,"sources":["/Users/jg066499/Documents/Project/Shopping-Cart/src/Reducers/cartReducer.js"],"names":["initState","isLoading","items","itemsInCart","cartValue","error","cartReducer","state","action","type","fetch","then","resp","json","data","console","log","catch"],"mappings":"AAAA,MAAMA,SAAS,GAAG;AACdC,EAAAA,SAAS,EAAE,IADG;AAEdC,EAAAA,KAAK,EAAE,EAFO;AAGdC,EAAAA,WAAW,EAAC,EAHE;AAIdC,EAAAA,SAAS,EAAE,CAJG;AAKdC,EAAAA,KAAK,EAAE;AALO,CAAlB;;AAOA,MAAMC,WAAW,GAAE,CAACC,KAAK,GAAGP,SAAT,EAAoBQ,MAApB,KAA6B;AAC5C,UAAOA,MAAM,CAACC,IAAd;AACI,SAAK,gBAAL;AAAuB;AACnBC,QAAAA,KAAK,CAAC,uDAAD,CAAL,CACCC,IADD,CACMC,IAAI,IAAIA,IAAI,CAACC,IAAL,EADd,EAECF,IAFD,CAEMG,IAAI,IAAI;AACVC,UAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BF,IAA3B;AACH,SAJD,EAKCG,KALD,CAKOZ,KAAK,IAAI;AAChB,iBAAO,EACH,GAAGE,KADA;AAEHF,YAAAA,KAAK,EAAEA,KAFJ;AAGHJ,YAAAA,SAAS,EAAE;AAHR,WAAP;AAKH,SAXG;AAYJ;AACC;;AACD;AACI,aAAOM,KAAP;AAjBR;AAoBA;;;;;;;;;;;;;;;;;;;;;;AAqBH,CA1CD;;AA4CA,eAAeD,WAAf","sourcesContent":["const initState = {\n    isLoading: true,\n    items: [],\n    itemsInCart:[],\n    cartValue: 0,\n    error: null,\n}\nconst cartReducer= (state = initState, action)=>{\n    switch(action.type){\n        case 'FETCH_FROM_API': {\n            fetch('https://shopping-cart-demo-api.herokuapp.com/products')\n            .then(resp => resp.json())\n            .then(data => {\n                console.log(\"///////////\", data);\n            })\n            .catch(error => {\n            return {\n                ...state,\n                error: error,\n                isLoading: false\n            }\n        })\n        break;\n        }\n        default:\n            return state;\n    }\n\n    /*if(action.type === 'ADD_PRODUCT_TO_CART'){\n    console.log(\"state.items\", state.items);\n        const itemAdded = state.items.find(item => item.partId === action.id);\n        const itemExistsInCart = state.itemsInCart.find(item => item.partId === action.id);\n        if(itemExistsInCart){\n            itemAdded.quantity += 1;\n            return {\n                ...state,\n                cartValue: state.cartValue + itemAdded.priceValue\n            }\n        }\n        else{\n            itemAdded.quantity = 1;\n            const newCartValue = state.cartValue + itemAdded.priceValue;\n            return {\n                ...state,\n                itemsInCart: [...state.itemsInCart, itemAdded],\n                cartValue: newCartValue\n            }\n        }\n    }*/  \n}\n\nexport default cartReducer;"]},"metadata":{},"sourceType":"module"}