{"ast":null,"code":"import { ACTIONS } from '../Actions/cartActions';\nconst initState = {\n  isLoading: true,\n  items: [],\n  itemsInCart: [],\n  cartValue: 0,\n  error: null\n};\n\nconst cartReducer = (state = initState, action) => {\n  switch (action.type) {\n    case ACTIONS.RESPONSE_FROM_API:\n      {\n        console.log(action.data);\n        return { ...state,\n          items: action.data,\n          isLoading: false\n        };\n      }\n\n    case ACTIONS.FAILED_TO_FETCH_API_RESPONSE:\n      return { ...state,\n        error: action.error,\n        isLoading: false\n      };\n\n    case ACTIONS.ADD_PRODUCT_TO_CART:\n      {\n        const itemAdded = state.items.find(item => item.partId === action.id);\n        const itemExistsInCart = state.itemsInCart.find(item => item.partId === action.id);\n\n        if (itemExistsInCart) {\n          itemAdded.quantity += 1;\n          return { ...state,\n            cartValue: state.cartValue + itemAdded.priceValue\n          };\n        } else {\n          itemAdded.quantity = 1;\n          const newCartValue = state.cartValue + itemAdded.priceValue;\n          console.log(\"newCartValue\", state.cartValue + parseFloat(itemAdded.priceValue));\n          return { ...state,\n            itemsInCart: [...state.itemsInCart, itemAdded],\n            cartValue: newCartValue\n          };\n        }\n      }\n\n    case ACTIONS.INCREASE_ITEM_QUNATITY:\n      {\n        const itemAdded = state.itemsInCart.find(item => item.partId === action.id);\n        itemAdded.quantity += 1;\n        return { ...state,\n          cartValue: state.cartValue + itemAdded.priceValue\n        };\n      }\n\n    case ACTIONS.DECREASE_ITEM_QUNATITY:\n      {\n        const itemAdded = state.itemsInCart.find(item => item.partId === action.id);\n\n        if (itemAdded.quantity === 1) {\n          const updatedCartItems = state.itemsInCart.filter(item => item.partId !== action.id);\n          return { ...state,\n            itemsInCart: updatedCartItems,\n            cartValue: state.cartValue - itemAdded.priceValue\n          };\n        } else {\n          itemAdded.quantity -= 1;\n          return { ...state,\n            cartValue: state.cartValue - itemAdded.priceValue\n          };\n        }\n      }\n\n    case ACTIONS.REMOVE_ITEM_FROM_CART:\n      {\n        const removedItem = state.itemsInCart.find(item => item.partId === action.id);\n        const updatedCartItems = state.itemsInCart.filter(item => item.partId !== action.id);\n        const newCartValue = state.cartValue - removedItem.priceValue * removedItem.quantity;\n        return { ...state,\n          itemsInCart: updatedCartItems,\n          cartValue: newCartValue\n        };\n      }\n\n    case ACTIONS.ADD_SHIPPING_CHARGES:\n      {\n        return { ...state,\n          cartValue: state.cartValue + 6\n        };\n      }\n\n    case ACTIONS.REMOVE_SHIPPING_CHARGES:\n      {\n        return { ...state,\n          cartValue: state.cartValue - 6\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default cartReducer;","map":{"version":3,"sources":["/Users/jg066499/Documents/Project/Shopping-Cart/src/Reducers/cartReducer.js"],"names":["ACTIONS","initState","isLoading","items","itemsInCart","cartValue","error","cartReducer","state","action","type","RESPONSE_FROM_API","console","log","data","FAILED_TO_FETCH_API_RESPONSE","ADD_PRODUCT_TO_CART","itemAdded","find","item","partId","id","itemExistsInCart","quantity","priceValue","newCartValue","parseFloat","INCREASE_ITEM_QUNATITY","DECREASE_ITEM_QUNATITY","updatedCartItems","filter","REMOVE_ITEM_FROM_CART","removedItem","ADD_SHIPPING_CHARGES","REMOVE_SHIPPING_CHARGES"],"mappings":"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","sourcesContent":["import { ACTIONS } from '../Actions/cartActions';\n\nconst initState = {\n    isLoading: true,\n    items: [],\n    itemsInCart:[],\n    cartValue: 0,\n    error: null,\n}\nconst cartReducer= (state = initState, action)=>{\n    switch(action.type){\n        case ACTIONS.RESPONSE_FROM_API: {\n\n        console.log(action.data);\n            return {\n                ...state,\n                items: action.data,\n                isLoading: false\n            };\n        }\n        case ACTIONS.FAILED_TO_FETCH_API_RESPONSE:\n            return {\n                ...state,\n                error: action.error,\n                isLoading: false\n            };\n        case ACTIONS.ADD_PRODUCT_TO_CART: {\n            const itemAdded = state.items.find(item => item.partId === action.id);\n            const itemExistsInCart = state.itemsInCart.find(item => item.partId === action.id);\n            if(itemExistsInCart){\n                itemAdded.quantity += 1;\n                return {\n                    ...state,\n                    cartValue: state.cartValue + itemAdded.priceValue\n                }\n            }\n            else{\n                itemAdded.quantity = 1;\n                const newCartValue = state.cartValue + itemAdded.priceValue;\n                console.log(\"newCartValue\", state.cartValue + parseFloat(itemAdded.priceValue));\n                return {\n                    ...state,\n                    itemsInCart: [...state.itemsInCart, itemAdded],\n                    cartValue: newCartValue\n                }\n            }\n        }\n        case ACTIONS.INCREASE_ITEM_QUNATITY: {\n            const itemAdded = state.itemsInCart.find(item => item.partId === action.id);\n            itemAdded.quantity += 1;\n            return {\n                ...state,\n                cartValue: state.cartValue + itemAdded.priceValue\n            }\n        }\n        case ACTIONS.DECREASE_ITEM_QUNATITY: {\n            const itemAdded = state.itemsInCart.find(item => item.partId === action.id);\n            if(itemAdded.quantity === 1) {\n                const updatedCartItems = state.itemsInCart.filter(item => item.partId !== action.id);\n                return {\n                    ...state,\n                    itemsInCart: updatedCartItems,\n                    cartValue: state.cartValue - itemAdded.priceValue\n                }\n            }\n            else {\n                itemAdded.quantity -= 1;\n                return {\n                    ...state,\n                    cartValue: state.cartValue - itemAdded.priceValue\n                }\n            }\n        }\n        case ACTIONS.REMOVE_ITEM_FROM_CART: {\n            const removedItem = state.itemsInCart.find(item => item.partId === action.id);\n            const updatedCartItems = state.itemsInCart.filter(item => item.partId !== action.id);\n            const newCartValue = state.cartValue - (removedItem.priceValue * removedItem.quantity); \n            return {\n                ...state,\n                itemsInCart: updatedCartItems,\n                cartValue: newCartValue\n            }\n        }\n        case ACTIONS.ADD_SHIPPING_CHARGES: {\n            return {\n                ...state,\n                cartValue: state.cartValue + 6\n            }\n        }\n        case ACTIONS.REMOVE_SHIPPING_CHARGES: {\n            return {\n                ...state,\n                cartValue: state.cartValue - 6\n            }\n        }\n        default:\n            return state;\n    }\n}\n\nexport default cartReducer;"]},"metadata":{},"sourceType":"module"}