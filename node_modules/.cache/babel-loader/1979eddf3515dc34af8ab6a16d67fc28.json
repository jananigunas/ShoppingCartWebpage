{"ast":null,"code":"var _jsxFileName = \"/Users/jg066499/Documents/Project/Shopping-Cart/src/Components/ShippingAndCheckout.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { ACTIONS } from '../Actions/cartActions';\n\nclass ShippingAndCheckout extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleChecked = event => {\n      if (event.target.checked) {\n        this.props.addShippingCharges();\n      } else {\n        this.props.removeShippingCharges();\n      }\n    };\n  }\n\n  render() {\n    const {\n      cartValue\n    } = this.props;\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"collection\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      className: \"collection-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"checkbox\",\n      onChange: this.handleChecked,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, \"Shipping(+6$)\"))), React.createElement(\"li\", {\n      className: \"collection-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, \"Total: \", cartValue, \" $\"))), React.createElement(\"div\", {\n      className: \"checkout\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"waves-effect waves-light btn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, \"Checkout\")));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    cartValue: state.cartValue\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    addShippingCharges: () => dispatch({\n      type: ACTIONS.ADD_SHIPPING_CHARGES\n    }),\n    removeShippingCharges: () => dispatch({\n      type: ACTIONS.REMOVE_SHIPPING_CHARGES\n    })\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShippingAndCheckout);","map":{"version":3,"sources":["/Users/jg066499/Documents/Project/Shopping-Cart/src/Components/ShippingAndCheckout.js"],"names":["React","Component","connect","ACTIONS","ShippingAndCheckout","handleChecked","event","target","checked","props","addShippingCharges","removeShippingCharges","render","cartValue","mapStateToProps","state","mapDispatchToProps","dispatch","type","ADD_SHIPPING_CHARGES","REMOVE_SHIPPING_CHARGES"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,OAAT,QAAwB,wBAAxB;;AAEA,MAAMC,mBAAN,SAAkCH,SAAlC,CAA2C;AAAA;AAAA;;AAAA,SAEvCI,aAFuC,GAEvBC,KAAK,IAAI;AACrB,UAAGA,KAAK,CAACC,MAAN,CAAaC,OAAhB,EAAyB;AACrB,aAAKC,KAAL,CAAWC,kBAAX;AACH,OAFD,MAGK;AACD,aAAKD,KAAL,CAAWE,qBAAX;AACH;AACJ,KATsC;AAAA;;AAWvCC,EAAAA,MAAM,GAAE;AACJ,UAAM;AAAEC,MAAAA;AAAF,QAAgB,KAAKJ,KAA3B;AACA,WACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAI,MAAA,SAAS,EAAC,iBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAO,MAAA,IAAI,EAAC,UAAZ;AAAuB,MAAA,QAAQ,EAAG,KAAKJ,aAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAFR,CADJ,CADJ,EAOI;AAAI,MAAA,SAAS,EAAC,iBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAgC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAWQ,SAAX,OAAhC,CAPJ,CADJ,EAUI;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAQ,MAAA,SAAS,EAAC,8BAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,CAVJ,CADJ;AAgBH;;AA7BsC;;AAgC3C,MAAMC,eAAe,GAAGC,KAAK,IAAI;AAC7B,SAAO;AACHF,IAAAA,SAAS,EAAEE,KAAK,CAACF;AADd,GAAP;AAGH,CAJD;;AAMA,MAAMG,kBAAkB,GAAGC,QAAQ,IAAI;AACnC,SAAO;AACHP,IAAAA,kBAAkB,EAAE,MAAMO,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAEf,OAAO,CAACgB;AAAf,KAAD,CAD/B;AAEHR,IAAAA,qBAAqB,EAAE,MAAMM,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAEf,OAAO,CAACiB;AAAf,KAAD;AAFlC,GAAP;AAIH,CALD;;AAOA,eAAelB,OAAO,CAACY,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CZ,mBAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { ACTIONS } from '../Actions/cartActions';\n\nclass ShippingAndCheckout extends Component{\n\n    handleChecked = event => {\n        if(event.target.checked) {\n            this.props.addShippingCharges();\n        }\n        else {\n            this.props.removeShippingCharges();\n        }\n    }\n    \n    render(){\n        const { cartValue } = this.props;\n        return (\n            <div className=\"container\">\n                <div className=\"collection\">\n                    <li className=\"collection-item\">\n                        <label>\n                            <input type=\"checkbox\" onChange= {this.handleChecked} />\n                                <span>Shipping(+6$)</span>\n                        </label>\n                    </li>\n                    <li className=\"collection-item\"><b>Total: {cartValue} $</b></li>\n                </div>\n                <div className=\"checkout\">\n                    <button className=\"waves-effect waves-light btn\">Checkout</button>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        cartValue: state.cartValue\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        addShippingCharges: () => dispatch({type: ACTIONS.ADD_SHIPPING_CHARGES}),\n        removeShippingCharges: () => dispatch({type: ACTIONS.REMOVE_SHIPPING_CHARGES}),\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShippingAndCheckout);"]},"metadata":{},"sourceType":"module"}